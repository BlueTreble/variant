\set ECHO none
ok 1..0
1..21
ok 1 - Reset role
ok 2 - Can not drop _start trigger
ok 3 - Can not drop _end trigger
ok 4 - Not allowed to disable variant storage
ok 5 - Not allowed to disable variant storage
ok 6 - Register test storage variant
ok 7 - test storage disallows storage
ok 8 - Verify event trigger
ok 9 - Drop extension



ok 10 - Register test variant
ok 11 - Register test storage variant
ok 12 - test storage disallows storage
ok 13 - Drop _end trigger
ok 14 - Create storage test table with event triggers disabled
ok 15 - Drop _start trigger
Verify we get WARNINGs because EVENT TRIGGERs are MIA
WARNING:  No ddl_command_start event trigger to verify variant storage; re-creating
CONTEXT:  SQL statement "SELECT bool_or( _variant._ensure_storage_check_one( p_warning, a ) ) FROM unnest( array[ 'start', 'end' ] ) a"
PL/pgSQL function _variant._ensure_storage_check(boolean) line 4 at IF
SQL statement "SELECT _variant._ensure_storage_check()"
PL/pgSQL function storage_allowed(character varying,boolean) line 5 at PERFORM
SQL statement "SELECT variant.storage_allowed( 'DEFAULT', false )"
PL/pgSQL function lives_ok(text,text) line 6 at EXECUTE statement
WARNING:  No ddl_command_end event trigger to verify variant storage; re-creating
CONTEXT:  SQL statement "SELECT bool_or( _variant._ensure_storage_check_one( p_warning, a ) ) FROM unnest( array[ 'start', 'end' ] ) a"
PL/pgSQL function _variant._ensure_storage_check(boolean) line 4 at IF
SQL statement "SELECT _variant._ensure_storage_check()"
PL/pgSQL function storage_allowed(character varying,boolean) line 5 at PERFORM
SQL statement "SELECT variant.storage_allowed( 'DEFAULT', false )"
PL/pgSQL function lives_ok(text,text) line 6 at EXECUTE statement
WARNING:  Found table columns with variants that were disabled or disallowed storage
DETAIL:  The following variants were enabled and had storage allowed:
	storage_test.v variant("test storage")
CONTEXT:  SQL statement "SELECT _variant._verify_storage(true)"
PL/pgSQL function _variant._ensure_storage_check(boolean) line 7 at PERFORM
SQL statement "SELECT _variant._ensure_storage_check()"
PL/pgSQL function storage_allowed(character varying,boolean) line 5 at PERFORM
SQL statement "SELECT variant.storage_allowed( 'DEFAULT', false )"
PL/pgSQL function lives_ok(text,text) line 6 at EXECUTE statement
ok 16 - Disallow storage on DEFAULT variant
ok 17 - test storage allows storage after fixup
ok 18 - No records found in variant.stored__bad
ok 19 - Can not ALTER TABLE
ok 20 - Not allowed to disable variant storage while in use
ok 21 - Ensure we can store in "test storage"
ok 22 - Can ALTER TABLE to use "test variant"
ok 23 - Can CREATE VIEW
ok 24 - Can disallow storage
ok 25 - test storage disallows storage
